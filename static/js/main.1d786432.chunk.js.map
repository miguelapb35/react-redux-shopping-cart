{"version":3,"sources":["components/Navbar.js","components/CartItem.js","actions.js","components/CartContainer.js","reducer.js","cart-items.js","App.js","serviceWorker.js","index.js"],"names":["connect","state","amount","className","xmlns","viewBox","d","dispatch","ownProps","id","remove","type","payload","removeItem","increase","decrease","toggle","img","title","price","src","alt","onClick","store","cart","total","React","useEffect","length","map","item","key","initialStore","reducer","action","tempCart","cartItem","filter","reduce","cartTotal","cartIttem","itemTotal","parseFloat","toFixed","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1d786432.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = ({amount}) => {\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-center\">\r\n        <h3>ReduxGear</h3>\r\n        <div className=\"nav-container\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\r\n            <path d=\"M16 6v2h2l2 12H0L2 8h2V6a6 6 0 1 1 12 0zm-2 0a4 4 0 1 0-8 0v2h8V6zM4 10v2h2v-2H4zm10 0v2h2v-2h-2z\" />\r\n          </svg>\r\n          <div className=\"amount-container\">\r\n            <p className=\"total-amount\"> {amount} </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {amount:state.amount}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  INCREASE,\r\n  DECREASE,\r\n//  REMOVE,\r\n  TOGGLE_AMOUNT,\r\n  removeItem\r\n} from '../actions';\r\n\r\n\r\nconst CartItem = ({\r\n  img,\r\n  title,\r\n  price,\r\n  amount,\r\n  remove,\r\n  increase,\r\n  decrease,\r\n  toggle\r\n}) => {\r\n  return (\r\n    <div className=\"cart-item\">\r\n      <img src={img} alt={title} />\r\n      <div>\r\n        <h4> {title} </h4>\r\n        <h4 className=\"item-price\"> ${price} </h4>\r\n\r\n        { /* remove button */}\r\n        <button\r\n          onClick={() => remove()}\r\n          className=\"remove-btn\">remove</button>\r\n      </div>\r\n      <div>\r\n        { /* increase amount */}\r\n        <button\r\n          onClick={() => toggle('inc')}\r\n          className=\"amount-btn\">\r\n          <svg xmlns='https://www.w3.org/2000/svg' viewBox='0 0 20 20'>\r\n            <path d='M10.707 7.05L10 6.343 4.343 12l1.414 1.414L10 9.172l4.243 4.242L15.657 12z' />\r\n          </svg>\r\n        </button>\r\n        { /*  amount */}\r\n        <p className=\"amount\"> {amount} </p>\r\n        { /* decrease amount */}\r\n        <button\r\n          onClick={() => {\r\n            if (amount === 1) {\r\n              return remove();\r\n            } else {\r\n              return toggle('dec');\r\n            }            \r\n          }}\r\n          className=\"amount-btn\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\r\n            <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  const { id, amount } = ownProps;\r\n  \r\n  return {\r\n    //remove: () => dispatch({ type: REMOVE, payload: { id } }),\r\n    remove: () => dispatch(removeItem(id)),\r\n    increase: () => dispatch({ type: INCREASE, payload: { id } }),\r\n    decrease: () => dispatch({ type: DECREASE, payload: { id, amount } }),\r\n    toggle: (toggle) => dispatch({ type: TOGGLE_AMOUNT, payload: { id, toggle } })\r\n  };\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps) (CartItem); ","export const DECREASE = 'DECREASE';\r\nexport const INCREASE = 'INCREASE';\r\nexport const REMOVE = 'REMOVE';\r\nexport const CLEAR_CART = 'CLEAR_CART';\r\nexport const GET_TOTALS = 'GET_TOTALS';\r\nexport const TOGGLE_AMOUNT = 'TOGGLE_AMOUNT';\r\n\r\nexport const removeItem = id => {\r\n  return {type: REMOVE, payload: {id}}\r\n}","import React from 'react';\r\nimport CartItem from './CartItem';\r\nimport { connect } from 'react-redux';\r\nimport { CLEAR_CART, GET_TOTALS } from '../actions';\r\n\r\nconst CartContainer = ({ cart = [], total, dispatch }) => {\r\n  React.useEffect(() => {\r\n    dispatch({ type: GET_TOTALS })\r\n  },[cart, dispatch]);\r\n  if (cart.length === 0) {\r\n    return (\r\n      <section className=\"cart\">\r\n        { /* cart header  */}\r\n        <header>\r\n          <h2>your bag</h2>\r\n          <h4 className=\"empty-cart\">is currently empty</h4>\r\n        </header>\r\n      </section>\r\n    );\r\n  }\r\n  return (\r\n    <section className=\"cart\">\r\n      { /* cart header  */}\r\n      <header>\r\n        <h2>your bag</h2>\r\n      </header>\r\n      { /* cart items  */}\r\n      <article>\r\n        {cart.map(item => {\r\n          return <CartItem key={item.id} {...item} />;\r\n        })}\r\n      </article>\r\n      { /* cart footer  */}\r\n      <footer>\r\n        <hr />\r\n        <div className=\"cart-total\">\r\n          <h4>\r\n            total <span>$ {total} </span>\r\n          </h4>\r\n        </div>\r\n        <button\r\n          onClick={() => dispatch({type: CLEAR_CART })}\r\n          className='btn clear-btn'>clear cart</button>\r\n      </footer>\r\n    </section>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(store) {\r\n  const {cart, total} = store\r\n  return {cart, total}\r\n}\r\n\r\nexport default connect(mapStateToProps) (CartContainer);","import {\r\n  DECREASE,\r\n  INCREASE,\r\n  CLEAR_CART,\r\n  REMOVE,\r\n  GET_TOTALS,\r\n  TOGGLE_AMOUNT\r\n} from './actions';\r\nimport cartItems from './cart-items';\r\n\r\nconst initialStore = {\r\n  cart: cartItems,\r\n  total: 0,\r\n  amount: 0\r\n};\r\n\r\nfunction reducer(state = initialStore, action) {\r\n  if (action.type === CLEAR_CART) {\r\n    return {...state, cart: []}\r\n  }\r\n  if (action.type === DECREASE) {\r\n      let  tempCart = state.cart.map((cartItem) => {\r\n        if (cartItem.id === action.payload.id) {\r\n          cartItem = { ...cartItem, amount: cartItem.amount - 1 }\r\n        }\r\n        return cartItem;\r\n      });\r\n\r\n    return { ...state, cart: tempCart };\r\n  }\r\n  if (action.type === INCREASE) {\r\n    let tempCart = state.cart.map((cartItem) => {\r\n      if (cartItem.id === action.payload.id) {\r\n        cartItem = { ...cartItem, amount: cartItem.amount + 1 }\r\n      }\r\n      return cartItem;\r\n    });\r\n    return {...state, cart: tempCart}\r\n  }\r\n  if (action.type === REMOVE) {\r\n    return {\r\n      ...state,\r\n      cart: state.cart.filter(cartItem =>\r\n        cartItem.id !== action.payload.id)\r\n    };\r\n  }\r\n  if(action.type === GET_TOTALS){\r\n    let { total, amount } = state.cart.reduce(\r\n      (cartTotal, cartIttem) => {\r\n        const { price, amount } = cartIttem;\r\n        const itemTotal = price * amount;\r\n        \r\n        cartTotal.total += itemTotal;\r\n        cartTotal.amount += amount;\r\n      \r\n        return cartTotal;\r\n      },\r\n      {\r\n        total: 0,\r\n        amount: 0\r\n      }\r\n    );\r\n    total = parseFloat(total.toFixed(2));\r\n    return {...state, total, amount}    \r\n  }\r\n  if (action.type === TOGGLE_AMOUNT) {\r\n    return {...state, cart: state.cart.map(cartItem => {\r\n      if (cartItem.id === action.payload.id) {\r\n        if (action.payload.toggle === 'inc') {\r\n          return (cartItem = { ...cartItem, amount: cartItem.amount + 1 });\r\n        } \r\n        if (action.payload.toggle === 'dec') {\r\n          return (cartItem = { ...cartItem, amount: cartItem.amount - 1 });\r\n        }\r\n      }  \r\n      return cartItem;\r\n    })}\r\n  }\r\n\r\n  return state; \r\n}\r\n\r\nexport default reducer;\r\n\r\n/*   switch (action.type) {\r\n    case CLEAR_CART:\r\n      return {...state, cart: [] };\r\n\r\n    default:\r\n      return state;\r\n  }  */ ","export default [\r\n  {\r\n    id: 1, \r\n    title: \"Samsung Galaxy S7\",\r\n    price: 599.99,\r\n    img:\r\n      \"https://res.cloudinary.com/diqqf3eq2/image/upload/v1583368215/phone-2_ohtt5s.png\",\r\n    amount: 1\r\n  },\r\n  {\r\n    id: 2, \r\n    title: \"Google pixel\",\r\n    price: 499.99,\r\n    img:\r\n      \"https://res.cloudinary.com/diqqf3eq2/image/upload/v1583371867/phone-1_gvesln.png\",\r\n    amount: 1\r\n  },\r\n  {\r\n    id: 3, \r\n    title: \"Xiaomi Redmi Note 2\",\r\n    price: 699.99,\r\n    img:\r\n      \"https://res.cloudinary.com/diqqf3eq2/image/upload/v1583368224/phone-3_h2s6fo.png\",\r\n    amount: 1\r\n  },\r\n]","import React from 'react';\nimport Navbar from './components/Navbar';\nimport CartContainer from './components/CartContainer';\nimport { createStore } from 'redux';\nimport reducer from './reducer';\n\n// react-redux - Provider -wraps app, connect -\n// used in components\nimport { Provider } from 'react-redux';\n\n// store\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nfunction App() {\n  // cart setup\n\n  return (\n    <Provider store={store}>\n      <Navbar />\n      <CartContainer /> \n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}